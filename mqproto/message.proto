syntax = "proto3";
option go_package = "../protocol";
package proto;

enum RemotingCommandType{
    RequestCommand = 0;
    ResponseCommand = 1;
}

enum OpaqueType {
    Subscription = 0;
    Unsubscription = 1;
    Publish = 2;
    PullMessage = 3;
    // 获取路由信息
    SyncTopicRouteInfo = 4;
    // 注册消费者
    RegisterConsumer = 5;
    // 心跳
    Heartbeat = 6;
}

message RemotingCommandHeader{
    // 请求码
    int32 code = 1;
    // 操作码
    OpaqueType Opaque  = 2;
    // 标识位
    int32 Flag = 3;
    // 备注信息
    string remark = 4;
}


message RemotingCommand{
    RemotingCommandType type =1;
    RemotingCommandHeader header =2;
    bytes body =3;
}

message SubscriptionRequestData {
    // 订阅的 Topic
    string  topic = 1;
    string clientId = 2;
    string consumerGroup = 3;
}
message SubscriptionResponseData {
    // 订阅的 Topic
    string  topic = 1;
    string clientId = 2;
    string consumerGroup = 3;
    repeated int32 queueIds =4;
}

message PullMessageRequestData {
    string clientId = 1;
    string topic = 2;
    string consumerGroup = 3;
    int32 pullSize = 4;
    int32 queueId = 5;
    int64 offset = 6;
}

message PullMessageResponseData {
    string topic =1;
    string consumerGroup = 2;
    int32 size = 3;
    repeated Message messages = 4;
}

message SyncTopicRouteRequestData {
    string topic =1;
    string consumerGroup = 2;
    string clientId = 3;
}
message SyncTopicRouteResponseData {
    repeated int32 queueId =1;
}
message RegisterConsumerRequestData {
    string topic =1;
    string consumerGroup = 2;
    string clientId = 3;
}
message RegisterConsumerResponseData {
    repeated int32 queueId =1;
}

message ConsumeProgress {
    int32 queueId = 1;
    int64 offset = 2;
}
message HeartbeatRequestData {
    string topic =1;
    string consumerGroup = 2;
    string clientId = 3;
    repeated ConsumeProgress consumeProgress = 4;
}


message Message {
    // 主题
    string topic = 1;
    // 消息内容
    bytes body = 3;
    // 生产时间戳
    int64 bornTimestamp = 4;
    // 存储时间戳
    int64 storeTimestamp = 5;
    // 消息ID
    string msgId = 6;
    // 生产者组
    string producerGroup = 7;
    // 消费者组
    string consumerGroup = 8;
    // 队列ID
    int32 queueId = 9;
    // 队列offset
    int64 queueOffset = 10;
}


message AddTopicRequest {
    string topicName = 1;
}
message AddConsumerGroupRequest {
    string topicName = 1;
    string groupName = 2;
}